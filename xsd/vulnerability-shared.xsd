<?xml version="1.0"?>
<!--========================================================================
   COPYRIGHT (C) 2013, Rapid7 LLC, Boston, MA, USA.
   All rights reserved. This material contains unpublished, copyrighted
   work including confidential and proprietary information of Rapid7.
=========================================================================-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!-- shared attributes -->
  <xsd:simpleType name="id_attribute">
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="255"/>
      <xsd:pattern value="[\w\._\-\+]+"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="boolean_attribute">
    <xsd:restriction base="xsd:integer">
      <xsd:enumeration value="0"/>
      <xsd:enumeration value="1"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="duration_attribute">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\d{1,2}h|\d{1,2}m|\d{1,2}h\d{1,2}m"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="uuid_attribute">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="registry_type_attribute">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="REG_SZ"/>
      <xsd:enumeration value="REG_EXPAND_SZ"/>
      <xsd:enumeration value="REG_BINARY"/>
      <xsd:enumeration value="REG_DWORD"/>
      <xsd:enumeration value="REG_DWORD_LITTLE_ENDIAN"/>
      <xsd:enumeration value="REG_DWORD_BIG_ENDIAN"/>
      <xsd:enumeration value="REG_LINK"/>
      <xsd:enumeration value="REG_MULTI_SZ"/>
      <xsd:enumeration value="REG_RESOURCE_LIST"/>
      <xsd:enumeration value="REG_FULL_RESOURCE_DESCRIPTOR"/>
      <xsd:enumeration value="REG_RESOURCE_REQUIREMENTS_LIST"/>
      <xsd:enumeration value="REG_QWORD"/>
      <xsd:enumeration value="REG_QWORD_LITTLE_ENDIAN"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:simpleType name="framework_attribute">
    <xsd:restriction base="xsd:integer">
      <xsd:minExclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>

  <!-- shared elements -->
  <xsd:complexType name="SolutionRef_element">
    <xsd:attribute name="id" type="id_attribute" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="version_element">
    <xsd:sequence minOccurs="1" maxOccurs="unbounded">
      <xsd:element name="range" type="range_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="regex" type="regex_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="value" type="value_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="iosrange" type="iosrange_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="stream" type="value_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="iosrange_element">
    <xsd:sequence>
      <xsd:element name="high" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="low" type="xsd:string"/>
  </xsd:complexType>

  <xsd:complexType name="range_element">
    <xsd:all>
      <xsd:element name="low" type="boundary_element" minOccurs="0"/>
      <xsd:element name="high" type="boundary_element" minOccurs="0"/>
    </xsd:all>
    <xsd:attribute name="comparator" type="xsd:string"/>
    <xsd:attribute name="helper">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="bind"/>
          <xsd:enumeration value="rhRPM"/>
          <xsd:enumeration value="ciscoASA"/>
          <xsd:enumeration value="ciscoTelePresence"/>
          <xsd:enumeration value="ciscoNX"/>
          <xsd:enumeration value="hpDataProtector"/>
          <xsd:enumeration value="Junos OS"/>
          <xsd:enumeration value="freeBSDPackage"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:simpleType name="string_element">
    <xsd:annotation>
      <xsd:documentation>The type for an element with non-empty content (at least one non-whitespace character)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="(\s*\S+\s*)+"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:complexType name="boundary_element" mixed="true">
    <xsd:sequence>
      <xsd:element name="pluginProperty" type="pluginFile_element" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="inclusive" type="boolean_attribute"/>
  </xsd:complexType>

  <xsd:complexType name="pluginFile_element">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="plugin" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:complexType name="regex_element">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="params" type="xsd:string"/>
        <xsd:attribute name="cflags" type="xsd:string"/>
        <xsd:attribute name="ctags" type="xsd:string"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:complexType name="value_element" mixed="true">
    <xsd:sequence>
      <xsd:element name="garbage" type="garbage_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="format">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="hex"/>
          <xsd:enumeration value="base64"/>
          <xsd:enumeration value="cescape"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="garbage_element">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="length">
          <xsd:simpleType>
            <xsd:restriction base="xsd:integer">
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <!-- helper groups -->
  <xsd:group name="verconfig_group">
    <xsd:sequence>
      <xsd:element name="version" type="version_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="config" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:group>

  <xsd:complexType name="NetworkService_Product">
    <xsd:sequence>
      <xsd:element name="Component" type="Component_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:group ref="verconfig_group"/>
    </xsd:sequence>
    <!-- If the product name is omitted it will be matched unconditionally -->
    <xsd:attribute name="name" type="xsd:string"/>
    <xsd:attribute name="family" type="xsd:string"/>
    <xsd:attribute name="vendor" type="xsd:string"/>
    <!-- <xsd:attribute name="name" type="Service_product"/>
    <xsd:attribute name="family" type="Service_family"/>
    <xsd:attribute name="vendor" type="Vendors_attribute"/> -->
    <xsd:attribute name="minCertainty">
      <xsd:simpleType>
        <xsd:restriction base="xsd:decimal">
          <xsd:minInclusive value="0.0"/>
          <xsd:maxInclusive value="1.0"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="Component_element">
    <xsd:sequence>
      <xsd:element name="version" type="version_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string"/>
  </xsd:complexType>

  <!-- Shared between Vulnerability and VulnerabilityTranslation -->
  <xsd:complexType name="Description_element" mixed="true">
    <xsd:annotation>
      <xsd:documentation>The description can have any mixed HTML/XML content.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:any processContents="skip" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>
