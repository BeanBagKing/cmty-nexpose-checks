<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:include schemaLocation="vulnerability-shared.xsd"/>
  <!-- <xsd:include schemaLocation="supported-vendors.xsd"/>
  <xsd:include schemaLocation="service/service-product.xsd"/>
  <xsd:include schemaLocation="service/service-family.xsd"/>
  <xsd:include schemaLocation="software/software-product.xsd"/>
  <xsd:include schemaLocation="software/software-family.xsd"/>
  <xsd:include schemaLocation="software/software-class.xsd"/>
  <xsd:include schemaLocation="system/system-product.xsd"/>
  <xsd:include schemaLocation="system/system-family.xsd"/>
  <xsd:include schemaLocation="system/system-architecture.xsd"/>
  <xsd:include schemaLocation="system/system-deviceclass.xsd"/> -->

  <xsd:element name="VulnerabilityCheck" type="VulnerabilityCheck_element"/>
  <xsd:complexType name="VulnerabilityCheck_element">
    <xsd:all>
      <xsd:element name="System" type="System_element" minOccurs="0"/>
      <!--<xsd:element name="NetworkService" type="NetworkService_element" minOccurs="0" maxOccurs="unbounded"/>-->
      <xsd:element name="NetworkService" type="NetworkService_element" minOccurs="0"/>
      <xsd:element name="RPMCheck" type="RPMCheck_element" minOccurs="0"/>
      <xsd:element name="ESXPatchCheck" type="ESXPatchCheck_element" minOccurs="0"/>
      <xsd:element name="JessRule" type="JessRule_element" minOccurs="0"/>
      <xsd:element name="Benchmark" type="Benchmark_element" minOccurs="0"/>
      <xsd:element name="DefaultAccount" type="DefaultAccount_element" minOccurs="0"/>
      <xsd:element name="InstalledSoftware" type="InstalledSoftware_element" minOccurs="0"/>
      <!--<xsd:element name="HTTPCheck" type="HTTPCheck_element" minOccurs="0" maxOccurs="unbounded"/>-->
      <xsd:element name="HTTPCheck" type="HTTPCheck_element" minOccurs="0"/>
      <!--<xsd:element name="HTTPDominoAclCheck" type="HTTPDominoAclCheck_element" minOccurs="0" maxOccurs="unbounded"/>-->
      <xsd:element name="HTTPDominoAclCheck" type="HTTPDominoAclCheck_element" minOccurs="0"/>
      <xsd:element name="AS400SystemSetting" type="AS400SystemSetting_element" minOccurs="0"/>
      <xsd:element name="TCPCheck" type="TCPCheck_element" minOccurs="0"/>
      <xsd:element name="PostgresCheck" type="PostgresCheck_element" minOccurs="0"/>
      <xsd:element name="UDPCheck" type="UDPCheck_element" minOccurs="0"/>
      <xsd:element name="FTPCheck" type="FTPCheck_element" minOccurs="0"/>
      <xsd:element name="MySQLCheck" type="MySQLCheck_element" minOccurs="0"/>
      <xsd:element name="RemoteExecution" type="RemoteExecution_element" minOccurs="0"/>
      <xsd:element name="OracleCheck" type="OracleCheck_element" minOccurs="0"/>
      <xsd:element name="TDSCheck" type="TDSCheck_element" minOccurs="0"/>
      <xsd:element name="FingerQuery" type="FingerQuery_element" minOccurs="0"/>
      <xsd:element name="TCPStatusCheck" type="TCPStatusCheck_element" minOccurs="0"/>
      <xsd:element name="VulnerabilityResult" type="VulnerabilityResult_element" minOccurs="0"/>
      <xsd:element name="ActiveXControlInstalled" type="ActiveXControlInstalled_element" minOccurs="0"/>
      <xsd:element name="MicrosoftPatch" type="MicrosoftPatch_element" minOccurs="0"/>
      <xsd:element name="WindowsFileVersion" type="WindowsFileVersion_element" minOccurs="0"/>
      <xsd:element name="WindowsFileExists" type="WindowsFileExists_element" minOccurs="0"/>
      <xsd:element name="WindowsFileStat" type="WindowsFileStat_element" minOccurs="0"/>
      <xsd:element name="WindowsRegistry" type="WindowsRegistry_element" minOccurs="0"/>
      <xsd:element name="WindowsRegistryFileVersion" type="WindowsRegistryFileVersion_element" minOccurs="0"/>
      <xsd:element name="WindowsRegistryFileStat" type="WindowsRegistryFileStat_element" minOccurs="0"/>
      <xsd:element name="WindowsRunEntry" type="WindowsRunEntry_element" minOccurs="0"/>
      <xsd:element name="and" minOccurs="0"/>
      <xsd:element name="or" minOccurs="0"/>
      <xsd:element name="not" minOccurs="0"/>
      <xsd:element name="PackageCheck" minOccurs="0"/>
      <xsd:element name="SpiderCheck" minOccurs="0"/>
      <xsd:element name="SSLCipherCheck" type="SSLCipherCheck_element" minOccurs="0"/>
      <xsd:element name="SoftwarePatchCheck" type="SoftwarePatchCheck_element" minOccurs="0"/>
      <xsd:element name="SystemPatch" type="SystemPatch_element" minOccurs="0"/>
    </xsd:all>
    <xsd:attribute name="accuracy" type="xsd:byte"/>
    <xsd:attribute name="framework" type="framework_attribute"/>
    <xsd:attribute name="safe" type="boolean_attribute"/>
    <xsd:attribute name="potential" type="boolean_attribute"/>
    <xsd:attribute name="unique" type="boolean_attribute"/>
    <xsd:attribute name="id" type="id_attribute" use="required"/>
    <xsd:attribute name="version">
        <xsd:simpleType>
          <xsd:restriction base="xsd:decimal">
            <xsd:enumeration value="1.0"/>
          </xsd:restriction>
        </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="scope" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="endpoint"/>
          <xsd:enumeration value="node"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="System_element">
    <xsd:sequence>
      <xsd:element name="hardware" type="hardware_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="OS" type="System_OS" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="hardware_element">
    <xsd:attribute name="vendor" type="xsd:string" use="required"/>
    <xsd:attribute name="series" type="xsd:string"/>
    <xsd:attribute name="model" type="xsd:string"/>
    <xsd:attribute name="family" type="xsd:string"/>
  </xsd:complexType>

  <xsd:complexType name="RPMCheck_element">
    <xsd:sequence>
      <xsd:element name="rpm" type="RPMCheck_rpm" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="NetworkService_element">
    <xsd:choice maxOccurs="unbounded">
      <xsd:element name="Product" type="NetworkService_Product" minOccurs="0"/>
      <xsd:element name="config" minOccurs="0"/>
    </xsd:choice>
    <xsd:attribute name="type" type="xsd:string"/>
    <xsd:attribute name="port">
      <xsd:simpleType>
        <xsd:restriction base="xsd:integer">
          <xsd:minInclusive value="0"/>
          <xsd:maxInclusive value="65535"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="JessRule_element">
    <xsd:sequence>
      <xsd:element name="query" type="xsd:string" minOccurs="0"/>
      <xsd:element name="body" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="Benchmark_element">
    <xsd:choice>
      <xsd:element name="CiscoIOS" type="Benchmark_CiscoIOS_element"/>
    </xsd:choice>
  </xsd:complexType>

  <xsd:complexType name="AS400SystemSetting_element">
    <xsd:choice>
      <xsd:element name="value" type="value_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="range" type="range_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="Benchmark_CiscoIOS_element">
    <xsd:sequence>
      <xsd:element name="Output" type="Output_element" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="xsd:string"/>
  </xsd:complexType>

  <xsd:complexType name="Output_element">
    <xsd:choice>
      <xsd:element name="value" type="value_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="range" type="range_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="regex" type="regex_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:choice>
    <xsd:attribute name="check" type="xsd:string" use="required"/>
    <xsd:attribute name="check_existence" type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="DefaultAccount_element">
    <xsd:sequence>
      <xsd:element name="uid" type="xsd:string" minOccurs="0"/>
      <xsd:element name="password" type="xsd:string" minOccurs="0"/>
      <xsd:element name="realm" type="xsd:string" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="advertise" type="boolean_attribute"/>
  </xsd:complexType>

  <xsd:complexType name="ESXPatchCheck_element">
    <xsd:attribute name="id" type="id_attribute" use="required"/>
    <xsd:attribute name="isInstalled" type="boolean_attribute" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="ActiveXControlInstalled_element">
    <xsd:attribute name="guid" type="uuid_attribute" use="required"/>
    <xsd:attribute name="honorKillBit" type="boolean_attribute"/>
  </xsd:complexType>

  <xsd:complexType name="MicrosoftPatch_element">
    <xsd:attribute name="kb" type="xsd:integer" use="required"/>
    <xsd:attribute name="isInstalled" type="boolean_attribute"/>
    <xsd:attribute name="needWQL" type="boolean_attribute"/>
  </xsd:complexType>

  <xsd:complexType name="WindowsRegistry_element">
    <xsd:choice>
      <xsd:element name="registryKey" type="registryKey_element" maxOccurs="unbounded"/>
      <xsd:element name="registryKeyExists" type="registryKey_element" maxOccurs="unbounded"/>
    </xsd:choice>
  </xsd:complexType>

  <xsd:complexType name="WindowsRegistryFileVersion_element">
    <xsd:sequence>
      <xsd:element name="registryFileVersion" type="registryFileVersion_element" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="WindowsRegistryFileStat_element">
    <xsd:sequence>
      <xsd:element name="fileStat" type="fileStat_element"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="WindowsRunEntry_element">
    <xsd:sequence>
      <xsd:element name="runEntry" type="runEntry_element" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="WindowsFileExists_element">
    <xsd:sequence>
      <xsd:element name="fileExists" type="fileExists_element" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="WindowsFileVersion_element">
    <xsd:sequence>
      <xsd:element name="fileVersion" type="fileVersion_element" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="WindowsFileStat_element">
    <xsd:sequence>
      <xsd:element name="fileStat" type="fileStat_element"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="Metadata_element">
    <xsd:sequence>
      <xsd:element name="Proof" type="Proof_element"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="Proof_element">
    <xsd:sequence>
      <xsd:element name="notvuln" type="notvuln_element"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="InstalledSoftware_element">
    <xsd:sequence>
      <xsd:element name="Product" type="InstalledSoftware_Product" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="HTTPCheck_element">
    <xsd:sequence>
      <xsd:element name="HTTPRequest" type="HTTPRequest_element" maxOccurs="unbounded"/>
      <xsd:element name="HTTPResponse" type="HTTPResponse_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="enableCookies" type="boolean_attribute"/>
    <xsd:attribute name="newClient" type="boolean_attribute"/>
    <xsd:attribute name="retries" type="xsd:integer"/>
    <xsd:attribute name="timeout" type="xsd:integer"/>
    <xsd:attribute name="redirect">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="anywhere"/>
          <xsd:enumeration value="never"/>
          <xsd:enumeration value="same-host"/>
          <xsd:enumeration value="same-host-and-port"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="HTTPDominoAclCheck_element">
    <xsd:attribute name="src" type="xsd:string"/>
  </xsd:complexType>

  <xsd:complexType name="TCPCheck_element">
    <xsd:sequence>
      <xsd:element name="TCPRequestResponse" type="TCPRequestResponse_element" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="UDPCheck_element">
    <xsd:sequence>
      <xsd:element name="UDPRequestResponse" type="UDPRequestResponse_element" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="FTPCheck_element">
    <xsd:choice>
      <xsd:element name="FTPRequestResponse" type="FTPRequestResponse_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="FTPDoS" type="value_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:choice>
    <xsd:attribute name="login" type="xsd:integer"/>
  </xsd:complexType>

  <xsd:complexType name="MySQLCheck_element">
    <xsd:sequence>
      <xsd:element name="SQLRequestResponse" type="SQLRequestResponse_element" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="PostgresCheck_element">
    <xsd:sequence>
      <xsd:element name="SQLRequestResponse" type="SQLRequestResponse_element" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="OracleCheck_element">
    <xsd:sequence>
      <xsd:element name="SQLRequestResponse" type="SQLRequestResponse_element" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="RemoteExecution_element">
    <xsd:sequence>
      <xsd:element name="Run" type="Run_element" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <!-- SSLCipherCheck Schema -->

  <!--  At least one of the attributes has to occur.
        <SSLCipherCheck>
            <CipherSuite name="Weak_Cipher_Suite_String_Name" MinAllowedDHKeySize="512" />
        </SSLCipherCheck>

        <SSLCipherCheck>
            <CipherSuite name="Weak_Cipher_Suite_String_Name" />
        </SSLCipherCheck>

        <SSLCipherCheck>
            <CipherSuite MinAllowedDHKeySize="512" />
        </SSLCipherCheck>

        onlyWeakCipherTest can be used to check if strong ciphers are enabled.
        <SSLCipherCheck onlyWeakCipherTest="1">
            <CipherSuite name="Strong_Cipher_Suite_String_Name"/>
        </SSLCipherCheck>

        Limiting to specified protocols:
        <SSLCipherCheck Protocols="SSLv3, TLSv1_2">
            <CipherSuite name="Weak_Cipher_Suite_String_Name"/>
        </SSLCipherCheck>

        DH primes can be checked by using
        <SSLCipherCheck>
            <CipherSuite DHPrime="Hex String Of The Prime" />
        </SSLCipherCheck>

  -->
  <xsd:complexType name="SSLCipherCheck_element">
    <xsd:sequence>
      <xsd:element name="CipherSuite" type="CipherSuite_element" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="OnlyWeakCipherTest" type="boolean_attribute" />
    <xsd:attribute name="Protocols" type="xsd:string" />
  </xsd:complexType>

  <xsd:complexType name="CipherSuite_element">
    <xsd:attribute name="name" type="xsd:string" use="optional"/>
    <xsd:attribute name="MinAllowedDHKeySize" type="xsd:integer"  use="optional"/>
    <xsd:attribute name="DHPrime" type="xsd:string" use="optional"/>
  </xsd:complexType>

  <!-- SoftwarePatchCheck Schema -->

  <xsd:complexType name="SoftwarePatchCheck_element">
    <xsd:sequence>
      <xsd:element name="SoftwareVersionRange" type="SoftwareVersionRange_element" minOccurs="1" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="application" type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="SoftwareVersionRange_element">
    <xsd:sequence>
      <xsd:element name="FileHash" type="FileHash_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="PatchID" type="PatchID_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="high" type="xsd:string" use="required"/>
    <xsd:attribute name="highInclusive" type="boolean_attribute" use="optional"/>
    <xsd:attribute name="low" type="xsd:string" use="optional"/>
    <xsd:attribute name="lowInclusive" type="boolean_attribute" use="optional"/>
    <xsd:attribute name="versionComparator" type="xsd:string" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="PatchID_element">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="softwareVersion" type="xsd:string" use="required"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:complexType name="FileHash_element">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="softwareVersion" type="xsd:string" use="required"/>
        <xsd:attribute name="softwarePropertyKey" type="xsd:string" use="required"/>
        <xsd:attribute name="type" type="xsd:string" use="required"/>
        <xsd:attribute name="fileName" type="xsd:string" use="required"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>


  <xsd:complexType name="TDSCheck_element">
    <xsd:sequence>
      <xsd:element name="SQLRequestResponse" type="SQLRequestResponse_element"  minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="SQLPermission" type="SQLPermission_element"  minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="FingerQuery_element">
    <xsd:sequence>
      <xsd:element name="query" type="xsd:string"  minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="SQLPermission_element">
    <xsd:sequence>
      <xsd:element name="trusteePrivileges" type="trusteePrivileges_element" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="object" type="xsd:string"/>
  </xsd:complexType>

  <xsd:complexType name="TCPStatusCheck_element">
    <xsd:attribute name="wait" type="xsd:integer"/>
    <xsd:attribute name="status" use="required">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="open"/>
          <xsd:enumeration value="closed"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="VulnerabilityResult_element">
    <xsd:sequence>
      <xsd:element name="result" type="result_element" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <!--<xsd:complexType name="booleanCheck_element">
    <xsd:sequence>
      <xsd:element name="Metadata" type="Metadata_element" minOccurs="0"/>
      <xsd:element name="WindowsFileExists" type="WindowsFileExists_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="WindowsFileVersion" type="WindowsFileVersion_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="WindowsRegistry" type="WindowsRegistry_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="WindowsFileStat" type="WindowsFileStat_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="WindowsRegistryFileVersion" type="WindowsRegistryFileVersion_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="WindowsRegistryFileStat" type="WindowsRegistryFileStat_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="and" type="booleanCheck_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="not" type="booleanCheck_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="or" type="booleanCheck_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="HTTPCheck" type="HTTPCheck_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="DefaultAccount" type="DefaultAccount_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="ActiveXControlInstalled" type="ActiveXControlInstalled_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>-->

  <xsd:complexType name="InstalledSoftware_Product">
    <xsd:sequence>
      <xsd:group ref="verconfig_group"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string"/>
    <xsd:attribute name="family" type="xsd:string"/>
    <xsd:attribute name="vendor" type="xsd:string"/>
    <xsd:attribute name="class" type="xsd:string"/>
    <!-- <xsd:attribute name="name" type="Software_product"/>
    <xsd:attribute name="family" type="Software_family"/>
    <xsd:attribute name="vendor" type="Vendors_attribute"/>
    <xsd:attribute name="class" type="Software_class"/> -->
    <xsd:attribute name="minCertainty">
      <xsd:simpleType>
        <xsd:restriction base="xsd:decimal">
          <xsd:minInclusive value="0.0"/>
          <xsd:maxInclusive value="1.0"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="System_OS">
    <xsd:sequence>
      <xsd:group ref="verconfig_group"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string"/>
    <xsd:attribute name="family" type="xsd:string"/>
    <xsd:attribute name="vendor" type="xsd:string"/>
    <xsd:attribute name="arch" type="xsd:string"/>
    <xsd:attribute name="device" type="xsd:string"/>
    <!-- <xsd:attribute name="name" type="System_product"/>
    <xsd:attribute name="family" type="System_family"/>
    <xsd:attribute name="vendor" type="Vendors_attribute"/>
    <xsd:attribute name="arch" type="System_architecture"/>
    <xsd:attribute name="device" type="System_deviceClass"/> -->
    <xsd:attribute name="minCertainty">
      <xsd:simpleType>
        <xsd:restriction base="xsd:decimal">
          <xsd:minInclusive value="0.0"/>
          <xsd:maxInclusive value="1.0"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="RPMCheck_rpm">
    <xsd:sequence>
      <xsd:group ref="verconfig_group"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string"/>
  </xsd:complexType>

  <xsd:complexType name="registryKey_element">
    <xsd:choice>
      <xsd:element name="registryValue" type="registryValue_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="registryValueExists" type="registryValue_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="mustNotBePresent" type="boolean_attribute"/>
  </xsd:complexType>

  <xsd:complexType name="registryValue_element">
    <xsd:choice>
      <xsd:element name="value" type="value_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="range" type="range_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="regex" type="regex_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="type" type="registry_type_attribute"/>
    <xsd:attribute name="default" type="xsd:string"/>
  </xsd:complexType>

  <xsd:complexType name="registryFileVersion_element">
    <xsd:sequence>
      <xsd:element name="version" type="version_element" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="keyname" type="xsd:string" use="required"/>
    <xsd:attribute name="valuename" type="xsd:string"/>
    <xsd:attribute name="filename" type="xsd:string"/>
  </xsd:complexType>

  <xsd:complexType name="runEntry_element">
    <xsd:choice>
      <xsd:element name="value" type="value_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="range" type="range_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="regex" type="regex_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="fileExists_element">
    <xsd:attribute name="name" type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="fileVersion_element">
    <xsd:sequence>
      <xsd:element name="version" type="version_element" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="mustExist" type="boolean_attribute"/>
  </xsd:complexType>

  <xsd:complexType name="fileStat_element">
    <xsd:sequence>
      <xsd:element name="modDate" type="modDate_element"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="keyname" type="xsd:string"/>
    <xsd:attribute name="valuename" type="xsd:string"/>
  </xsd:complexType>

  <xsd:complexType name="modDate_element">
    <xsd:sequence>
      <xsd:element name="value" type="value_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="range" type="range_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="regex" type="regex_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:simpleType name="notvuln_element">
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>

  <xsd:complexType name="HTTPRequest_element">
    <xsd:sequence>
      <xsd:element name="URI" maxOccurs="unbounded"/>
      <xsd:element name="HTTPHeader" type="HTTPHeader_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="mimeContent" type="mimeContent_element" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="method" type="xsd:string" default="GET"/>
    <xsd:attribute name="redirect">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="anywhere"/>
          <xsd:enumeration value="never"/>
          <xsd:enumeration value="same-host"/>
          <xsd:enumeration value="same-host-and-port"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="HTTPResponse_element">
    <xsd:sequence>
      <xsd:element name="HTTPHeader" type="HTTPHeader_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="and" type="boolean_element" minOccurs="0"/>
      <xsd:element name="or" type="boolean_element" minOccurs="0"/>
      <xsd:element name="not" type="boolean_element" minOccurs="0"/>
      <xsd:element name="regex" type="regex_element" minOccurs="0"/>
      <xsd:element name="thrownException" type="thrownException_element" minOccurs="0"/>
      <xsd:element name="value" type="value_element" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="code" default="200">
      <xsd:simpleType>
        <xsd:restriction base="xsd:integer">
          <xsd:minInclusive value="100"/>
          <xsd:maxInclusive value="599"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="headerCheck" default="all">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="all" />
          <xsd:enumeration value="at least one" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="redirect">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="anywhere"/>
          <xsd:enumeration value="never"/>
          <xsd:enumeration value="same-host"/>
          <xsd:enumeration value="same-host-and-port"/>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="HTTPHeader_element">
    <xsd:choice>
      <xsd:element name="value" type="value_element"/>
      <xsd:element name="regex" type="regex_element"/>
      <xsd:element name="and" type="boolean_element"/>
      <xsd:element name="or" type="boolean_element"/>
      <xsd:element name="not" type="boolean_element"/>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="check" default="all">
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="all" />
          <xsd:enumeration value="none satisfy" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:complexType>

  <xsd:complexType name="mimeContent_element">
    <xsd:choice>
      <xsd:element name="value" type="value_element" minOccurs="0"/>
      <xsd:element name="pluginFile" type="pluginFile_element" minOccurs="0"/>
    </xsd:choice>
    <xsd:attribute name="type" type="xsd:string"/>
  </xsd:complexType>

  <xsd:complexType name="TCPRequestResponse_element">
    <xsd:sequence>
      <xsd:element name="TCPRequest" type="TCPRequest_element"/>
      <xsd:element name="TCPResponse" type="TCPResponse_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="newConnection" type="boolean_attribute"/>
    <xsd:attribute name="encoding" type="xsd:string" default="ISO-8859-1"/>
  </xsd:complexType>

  <xsd:complexType name="FTPRequestResponse_element">
    <xsd:sequence>
      <xsd:element name="FTPRequest" type="FTPRequest_element"/>
      <xsd:element name="FTPResponse" type="FTPResponse_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>


  <xsd:complexType name="UDPRequestResponse_element">
    <xsd:sequence>
      <xsd:element name="UDPRequest" type="UDPRequest_element"/>
      <xsd:element name="UDPResponse" type="UDPResponse_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="TCPRequest_element">
    <xsd:choice minOccurs="0">
      <xsd:element name="value" type="value_element"/>
      <xsd:element name="pluginFile" type="pluginFile_element"/>
    </xsd:choice>
  </xsd:complexType>

  <xsd:complexType name="TCPResponse_element">
    <xsd:choice>
      <xsd:element name="regex" type="regex_element"/>
      <xsd:element name="thrownException" type="thrownException_element"/>
    </xsd:choice>
  </xsd:complexType>

  <xsd:complexType name="FTPRequest_element" mixed="true">
    <xsd:sequence>
      <xsd:element name="value" type="value_element" minOccurs="0"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="FTPResponse_element">
    <xsd:sequence>
      <xsd:element name="regex" type="regex_element" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="code" type="xsd:integer"/>
  </xsd:complexType>

  <xsd:complexType name="UDPRequest_element">
    <xsd:choice>
      <xsd:element name="value" type="value_element"/>
      <xsd:element name="pluginFile" type="pluginFile_element"/>
    </xsd:choice>
  </xsd:complexType>

  <xsd:complexType name="UDPResponse_element">
    <xsd:choice>
      <xsd:element name="regex" type="regex_element"/>
      <xsd:element name="thrownException" type="thrownException_element"/>
      <xsd:element name="valueLength" type="xsd:integer"/>
    </xsd:choice>
  </xsd:complexType>

  <xsd:complexType name="SQLRequestResponse_element">
    <xsd:sequence>
      <xsd:element name="SQLRequest" type="value_element" maxOccurs="unbounded"/>
      <xsd:element name="SQLResponse" type="SQLResponse_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="newConnection" type="xsd:integer"/>
    <xsd:attribute name="driverName" type="xsd:string"/>
  </xsd:complexType>

  <xsd:complexType name="Run_element">
    <xsd:sequence>
      <xsd:element name="Command" type="xsd:string"/>
      <xsd:element name="Output" type="CommentOutput_element"/>
    </xsd:sequence>
    <xsd:attribute name="bufferSize" type="xsd:integer"/>
    <!-- Timeout in minutes. -->
    <xsd:attribute name="timeout" type="xsd:integer"/>
  </xsd:complexType>

  <xsd:complexType name="CommentOutput_element">
    <xsd:sequence>
      <xsd:element name="regex" type="regex_element"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="SQLResponse_element">
    <xsd:choice>
      <xsd:element name="regex" type="regex_element"/>
      <xsd:element name="thrownException" type="thrownException_element"/>
    </xsd:choice>
    <xsd:attribute name="disposition" type="status_element"/>
  </xsd:complexType>

  <xsd:complexType name="trusteePrivileges_element">
    <xsd:sequence>
      <xsd:element name="trustee" type="xsd:string"/>
      <xsd:element name="privilege" type="xsd:string"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="result_element">
    <xsd:sequence>
      <xsd:element name="status" type="status_element" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="id" type="id_attribute" use="required"/>
  </xsd:complexType>

  <xsd:simpleType name="status_element">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="vulnerable"/>
      <xsd:enumeration value="vulnerable-version"/>
      <xsd:enumeration value="vulnerable-potential"/>
      <xsd:enumeration value="not-vulnerable"/>
    </xsd:restriction>
  </xsd:simpleType>

  <xsd:complexType name="thrownException_element" mixed="true">
    <xsd:sequence>
      <xsd:element name="or" type="boolean_element" minOccurs="0"/>
      <xsd:element name="regex" type="regex_element" minOccurs="0"/>
    </xsd:sequence>
    <xsd:attribute name="class" type="xsd:string"/>
  </xsd:complexType>

  <xsd:complexType name="boolean_element">
    <xsd:sequence>
      <xsd:element name="and" type="boolean_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="or" type="boolean_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="not" type="boolean_element" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="regex" type="regex_element" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="SystemPatch_element">
    <xsd:sequence>
      <xsd:element name="Patch" type="patch_element" maxOccurs="unbounded" minOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="patch_element">
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="isInstalled" type="boolean_attribute" use="required"/>
  </xsd:complexType>

</xsd:schema>
